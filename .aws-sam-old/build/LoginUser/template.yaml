AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Smart Productivity Assistant â€“ Core infra + Auth

Globals:
  Function:
    Runtime: nodejs20.x
    Timeout: 10
    MemorySize: 256
    Environment:
      Variables:
        USERS_TABLE: !Ref UsersTable
        JWT_SECRET_PARAM: /spa/JWT_SECRET

Resources:
  Api:
    Type: AWS::Serverless::Api
    Properties:
      StageName: prod
      Cors: "'*'"

  UsersTable:
    Type: AWS::DynamoDB::Table
    Properties:
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: userId
          AttributeType: S
        - AttributeName: email
          AttributeType: S
      KeySchema:
        - AttributeName: userId
          KeyType: HASH
      GlobalSecondaryIndexes:
        - IndexName: email-index
          KeySchema:
            - AttributeName: email
              KeyType: HASH
          Projection:
            ProjectionType: ALL

  RegisterUser:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: .
      Handler: src/auth/register.handler
      Events:
        ApiPost:
          Type: Api
          Properties:
            RestApiId: !Ref Api
            Path: /auth/register
            Method: POST     # public (no authorizer)

      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref UsersTable
        - SSMParameterReadPolicy:
            ParameterName: /spa/JWT_SECRET

  LoginUser:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: .
      Handler: src/auth/login.handler
      Events:
        ApiPost:
          Type: Api
          Properties:
            RestApiId: !Ref Api
            Path: /auth/login
            Method: POST     # public (no authorizer)

      Policies:
        - DynamoDBReadPolicy:
            TableName: !Ref UsersTable
        - SSMParameterReadPolicy:
            ParameterName: /spa/JWT_SECRET

  JwtAuthorizer:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: .
      Handler: src/authorizer/index.handler
      Policies:
        - SSMParameterReadPolicy:
            ParameterName: /spa/JWT_SECRET

  SecureHello:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: .
      Handler: src/auth/secureHello.handler
      Events:
        ApiGet:
          Type: Api
          Properties:
            RestApiId: !Ref Api
            Path: /secure/hello
            Method: GET
            Auth:
              Authorizer: JwtAuthorizer   # only this route is protected
      Policies:
        - SSMParameterReadPolicy:
            ParameterName: /spa/JWT_SECRET
